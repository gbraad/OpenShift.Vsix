// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// FlexVolume represents a generic volume resource that is
    /// provisioned/attached using an exec based plugin. This is an alpha
    /// feature and may change in future.
    /// </summary>
    public partial class Iok8skubernetespkgapiv1FlexVolumeSource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1FlexVolumeSource class.
        /// </summary>
        public Iok8skubernetespkgapiv1FlexVolumeSource() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1FlexVolumeSource class.
        /// </summary>
        public Iok8skubernetespkgapiv1FlexVolumeSource(string driver, string fsType = default(string), IDictionary<string, string> options = default(IDictionary<string, string>), bool? readOnlyProperty = default(bool?), Iok8skubernetespkgapiv1LocalObjectReference secretRef = default(Iok8skubernetespkgapiv1LocalObjectReference))
        {
            Driver = driver;
            FsType = fsType;
            Options = options;
            ReadOnlyProperty = readOnlyProperty;
            SecretRef = secretRef;
        }

        /// <summary>
        /// Driver is the name of the driver to use for this volume.
        /// </summary>
        [JsonProperty(PropertyName = "driver")]
        public string Driver { get; set; }

        /// <summary>
        /// Filesystem type to mount. Must be a filesystem type supported by
        /// the host operating system. Ex. "ext4", "xfs", "ntfs". The default
        /// filesystem depends on FlexVolume script.
        /// </summary>
        [JsonProperty(PropertyName = "fsType")]
        public string FsType { get; set; }

        /// <summary>
        /// Optional: Extra command options if any.
        /// </summary>
        [JsonProperty(PropertyName = "options")]
        public IDictionary<string, string> Options { get; set; }

        /// <summary>
        /// Optional: Defaults to false (read/write). ReadOnly here will force
        /// the ReadOnly setting in VolumeMounts.
        /// </summary>
        [JsonProperty(PropertyName = "readOnly")]
        public bool? ReadOnlyProperty { get; set; }

        /// <summary>
        /// Optional: SecretRef is reference to the secret object containing
        /// sensitive information to pass to the plugin scripts. This may be
        /// empty if no secret object is specified. If the secret object
        /// contains more than one secret, all secrets are passed to the
        /// plugin scripts.
        /// </summary>
        [JsonProperty(PropertyName = "secretRef")]
        public Iok8skubernetespkgapiv1LocalObjectReference SecretRef { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Driver == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Driver");
            }
        }
    }
}
