// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// IngressSpec describes the Ingress the user wishes to exist.
    /// </summary>
    public partial class Iok8skubernetespkgapisextensionsv1beta1IngressSpec
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapisextensionsv1beta1IngressSpec class.
        /// </summary>
        public Iok8skubernetespkgapisextensionsv1beta1IngressSpec() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapisextensionsv1beta1IngressSpec class.
        /// </summary>
        public Iok8skubernetespkgapisextensionsv1beta1IngressSpec(Iok8skubernetespkgapisextensionsv1beta1IngressBackend backend = default(Iok8skubernetespkgapisextensionsv1beta1IngressBackend), IList<Iok8skubernetespkgapisextensionsv1beta1IngressRule> rules = default(IList<Iok8skubernetespkgapisextensionsv1beta1IngressRule>), IList<Iok8skubernetespkgapisextensionsv1beta1IngressTLS> tls = default(IList<Iok8skubernetespkgapisextensionsv1beta1IngressTLS>))
        {
            Backend = backend;
            Rules = rules;
            Tls = tls;
        }

        /// <summary>
        /// A default backend capable of servicing requests that don't match
        /// any rule. At least one of 'backend' or 'rules' must be specified.
        /// This field is optional to allow the loadbalancer controller or
        /// defaulting logic to specify a global default.
        /// </summary>
        [JsonProperty(PropertyName = "backend")]
        public Iok8skubernetespkgapisextensionsv1beta1IngressBackend Backend { get; set; }

        /// <summary>
        /// A list of host rules used to configure the Ingress. If
        /// unspecified, or no rule matches, all traffic is sent to the
        /// default backend.
        /// </summary>
        [JsonProperty(PropertyName = "rules")]
        public IList<Iok8skubernetespkgapisextensionsv1beta1IngressRule> Rules { get; set; }

        /// <summary>
        /// TLS configuration. Currently the Ingress only supports a single
        /// TLS port, 443. If multiple members of this list specify different
        /// hosts, they will be multiplexed on the same port according to the
        /// hostname specified through the SNI TLS extension, if the ingress
        /// controller fulfilling the ingress supports SNI.
        /// </summary>
        [JsonProperty(PropertyName = "tls")]
        public IList<Iok8skubernetespkgapisextensionsv1beta1IngressTLS> Tls { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.Backend != null)
            {
                this.Backend.Validate();
            }
            if (this.Rules != null)
            {
                foreach (var element in this.Rules)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
