// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// ContainerStateTerminated is a terminated state of a container.
    /// </summary>
    public partial class Iok8skubernetespkgapiv1ContainerStateTerminated
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1ContainerStateTerminated class.
        /// </summary>
        public Iok8skubernetespkgapiv1ContainerStateTerminated() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1ContainerStateTerminated class.
        /// </summary>
        public Iok8skubernetespkgapiv1ContainerStateTerminated(int exitCode, string containerID = default(string), DateTime? finishedAt = default(DateTime?), string message = default(string), string reason = default(string), int? signal = default(int?), DateTime? startedAt = default(DateTime?))
        {
            ContainerID = containerID;
            ExitCode = exitCode;
            FinishedAt = finishedAt;
            Message = message;
            Reason = reason;
            Signal = signal;
            StartedAt = startedAt;
        }

        /// <summary>
        /// Container's ID in the format 'docker://&lt;container_id&gt;'
        /// </summary>
        [JsonProperty(PropertyName = "containerID")]
        public string ContainerID { get; set; }

        /// <summary>
        /// Exit status from the last termination of the container
        /// </summary>
        [JsonProperty(PropertyName = "exitCode")]
        public int ExitCode { get; set; }

        /// <summary>
        /// Time at which the container last terminated
        /// </summary>
        [JsonProperty(PropertyName = "finishedAt")]
        public DateTime? FinishedAt { get; set; }

        /// <summary>
        /// Message regarding the last termination of the container
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// (brief) reason from the last termination of the container
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

        /// <summary>
        /// Signal from the last termination of the container
        /// </summary>
        [JsonProperty(PropertyName = "signal")]
        public int? Signal { get; set; }

        /// <summary>
        /// Time at which previous execution of the container started
        /// </summary>
        [JsonProperty(PropertyName = "startedAt")]
        public DateTime? StartedAt { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
