// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// ScaleIOVolumeSource represents a persistent ScaleIO volume
    /// </summary>
    public partial class Iok8skubernetespkgapiv1ScaleIOVolumeSource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1ScaleIOVolumeSource class.
        /// </summary>
        public Iok8skubernetespkgapiv1ScaleIOVolumeSource() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1ScaleIOVolumeSource class.
        /// </summary>
        public Iok8skubernetespkgapiv1ScaleIOVolumeSource(string gateway, Iok8skubernetespkgapiv1LocalObjectReference secretRef, string system, string fsType = default(string), string protectionDomain = default(string), bool? readOnlyProperty = default(bool?), bool? sslEnabled = default(bool?), string storageMode = default(string), string storagePool = default(string), string volumeName = default(string))
        {
            FsType = fsType;
            Gateway = gateway;
            ProtectionDomain = protectionDomain;
            ReadOnlyProperty = readOnlyProperty;
            SecretRef = secretRef;
            SslEnabled = sslEnabled;
            StorageMode = storageMode;
            StoragePool = storagePool;
            System = system;
            VolumeName = volumeName;
        }

        /// <summary>
        /// Filesystem type to mount. Must be a filesystem type supported by
        /// the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
        /// inferred to be "ext4" if unspecified.
        /// </summary>
        [JsonProperty(PropertyName = "fsType")]
        public string FsType { get; set; }

        /// <summary>
        /// The host address of the ScaleIO API Gateway.
        /// </summary>
        [JsonProperty(PropertyName = "gateway")]
        public string Gateway { get; set; }

        /// <summary>
        /// The name of the Protection Domain for the configured storage
        /// (defaults to "default").
        /// </summary>
        [JsonProperty(PropertyName = "protectionDomain")]
        public string ProtectionDomain { get; set; }

        /// <summary>
        /// Defaults to false (read/write). ReadOnly here will force the
        /// ReadOnly setting in VolumeMounts.
        /// </summary>
        [JsonProperty(PropertyName = "readOnly")]
        public bool? ReadOnlyProperty { get; set; }

        /// <summary>
        /// SecretRef references to the secret for ScaleIO user and other
        /// sensitive information. If this is not provided, Login operation
        /// will fail.
        /// </summary>
        [JsonProperty(PropertyName = "secretRef")]
        public Iok8skubernetespkgapiv1LocalObjectReference SecretRef { get; set; }

        /// <summary>
        /// Flag to enable/disable SSL communication with Gateway, default
        /// false
        /// </summary>
        [JsonProperty(PropertyName = "sslEnabled")]
        public bool? SslEnabled { get; set; }

        /// <summary>
        /// Indicates whether the storage for a volume should be thick or thin
        /// (defaults to "thin").
        /// </summary>
        [JsonProperty(PropertyName = "storageMode")]
        public string StorageMode { get; set; }

        /// <summary>
        /// The Storage Pool associated with the protection domain (defaults
        /// to "default").
        /// </summary>
        [JsonProperty(PropertyName = "storagePool")]
        public string StoragePool { get; set; }

        /// <summary>
        /// The name of the storage system as configured in ScaleIO.
        /// </summary>
        [JsonProperty(PropertyName = "system")]
        public string System { get; set; }

        /// <summary>
        /// The name of a volume already created in the ScaleIO system that is
        /// associated with this volume source.
        /// </summary>
        [JsonProperty(PropertyName = "volumeName")]
        public string VolumeName { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Gateway == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Gateway");
            }
            if (SecretRef == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SecretRef");
            }
            if (System == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "System");
            }
        }
    }
}
