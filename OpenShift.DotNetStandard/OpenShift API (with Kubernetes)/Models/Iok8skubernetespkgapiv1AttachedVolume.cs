// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// AttachedVolume describes a volume attached to a node
    /// </summary>
    public partial class Iok8skubernetespkgapiv1AttachedVolume
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1AttachedVolume class.
        /// </summary>
        public Iok8skubernetespkgapiv1AttachedVolume() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1AttachedVolume class.
        /// </summary>
        public Iok8skubernetespkgapiv1AttachedVolume(string devicePath, string name)
        {
            DevicePath = devicePath;
            Name = name;
        }

        /// <summary>
        /// DevicePath represents the device path where the volume should be
        /// available
        /// </summary>
        [JsonProperty(PropertyName = "devicePath")]
        public string DevicePath { get; set; }

        /// <summary>
        /// Name of the attached volume
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (DevicePath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DevicePath");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
