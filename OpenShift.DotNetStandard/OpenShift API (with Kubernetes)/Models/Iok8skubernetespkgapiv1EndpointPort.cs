// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// EndpointPort is a tuple that describes a single port.
    /// </summary>
    public partial class Iok8skubernetespkgapiv1EndpointPort
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1EndpointPort class.
        /// </summary>
        public Iok8skubernetespkgapiv1EndpointPort() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1EndpointPort class.
        /// </summary>
        public Iok8skubernetespkgapiv1EndpointPort(int port, string name = default(string), string protocol = default(string))
        {
            Name = name;
            Port = port;
            Protocol = protocol;
        }

        /// <summary>
        /// The name of this port (corresponds to ServicePort.Name). Must be a
        /// DNS_LABEL. Optional only if one port is defined.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// The port number of the endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int Port { get; set; }

        /// <summary>
        /// The IP protocol for this port. Must be UDP or TCP. Default is TCP.
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public string Protocol { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
