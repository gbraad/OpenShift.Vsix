// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// BuildTriggerPolicy describes a policy for a single trigger that
    /// results in a new Build.
    /// </summary>
    public partial class Comgithubopenshiftoriginpkgbuildapisbuildv1BuildTriggerPolicy
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgbuildapisbuildv1BuildTriggerPolicy
        /// class.
        /// </summary>
        public Comgithubopenshiftoriginpkgbuildapisbuildv1BuildTriggerPolicy() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgbuildapisbuildv1BuildTriggerPolicy
        /// class.
        /// </summary>
        public Comgithubopenshiftoriginpkgbuildapisbuildv1BuildTriggerPolicy(string type, Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger bitbucket = default(Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger), Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger generic = default(Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger), Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger github = default(Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger), Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger gitlab = default(Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger), Comgithubopenshiftoriginpkgbuildapisbuildv1ImageChangeTrigger imageChange = default(Comgithubopenshiftoriginpkgbuildapisbuildv1ImageChangeTrigger))
        {
            Bitbucket = bitbucket;
            Generic = generic;
            Github = github;
            Gitlab = gitlab;
            ImageChange = imageChange;
            Type = type;
        }

        /// <summary>
        /// BitbucketWebHook contains the parameters for a Bitbucket webhook
        /// type of trigger
        /// </summary>
        [JsonProperty(PropertyName = "bitbucket")]
        public Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger Bitbucket { get; set; }

        /// <summary>
        /// generic contains the parameters for a Generic webhook type of
        /// trigger
        /// </summary>
        [JsonProperty(PropertyName = "generic")]
        public Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger Generic { get; set; }

        /// <summary>
        /// github contains the parameters for a GitHub webhook type of trigger
        /// </summary>
        [JsonProperty(PropertyName = "github")]
        public Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger Github { get; set; }

        /// <summary>
        /// GitLabWebHook contains the parameters for a GitLab webhook type of
        /// trigger
        /// </summary>
        [JsonProperty(PropertyName = "gitlab")]
        public Comgithubopenshiftoriginpkgbuildapisbuildv1WebHookTrigger Gitlab { get; set; }

        /// <summary>
        /// imageChange contains parameters for an ImageChange type of trigger
        /// </summary>
        [JsonProperty(PropertyName = "imageChange")]
        public Comgithubopenshiftoriginpkgbuildapisbuildv1ImageChangeTrigger ImageChange { get; set; }

        /// <summary>
        /// type is the type of build trigger
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
