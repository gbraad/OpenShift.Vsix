// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Template contains the inputs needed to produce a Config.
    /// </summary>
    public partial class Comgithubopenshiftoriginpkgtemplateapistemplatev1Template
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgtemplateapistemplatev1Template class.
        /// </summary>
        public Comgithubopenshiftoriginpkgtemplateapistemplatev1Template() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgtemplateapistemplatev1Template class.
        /// </summary>
        public Comgithubopenshiftoriginpkgtemplateapistemplatev1Template(IList<Iok8sapimachinerypkgruntimeRawExtension> objects, string apiVersion = default(string), string kind = default(string), IDictionary<string, string> labels = default(IDictionary<string, string>), string message = default(string), Iok8sapimachinerypkgapismetav1ObjectMeta metadata = default(Iok8sapimachinerypkgapismetav1ObjectMeta), IList<Comgithubopenshiftoriginpkgtemplateapistemplatev1Parameter> parameters = default(IList<Comgithubopenshiftoriginpkgtemplateapistemplatev1Parameter>))
        {
            ApiVersion = apiVersion;
            Kind = kind;
            Labels = labels;
            Message = message;
            Metadata = metadata;
            Objects = objects;
            Parameters = parameters;
        }

        /// <summary>
        /// APIVersion defines the versioned schema of this representation of
        /// an object. Servers should convert recognized schemas to the
        /// latest internal value, and may reject unrecognized values. More
        /// info:
        /// https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
        /// </summary>
        [JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Kind is a string value representing the REST resource this object
        /// represents. Servers may infer this from the endpoint the client
        /// submits requests to. Cannot be updated. In CamelCase. More info:
        /// https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// labels is a optional set of labels that are applied to every
        /// object during the Template to Config transformation.
        /// </summary>
        [JsonProperty(PropertyName = "labels")]
        public IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// message is an optional instructional message that will be
        /// displayed when this template is instantiated. This field should
        /// inform the user how to utilize the newly created resources.
        /// Parameter substitution will be performed on the message before
        /// being displayed so that generated credentials and other
        /// parameters can be included in the output.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Standard object's metadata.
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public Iok8sapimachinerypkgapismetav1ObjectMeta Metadata { get; set; }

        /// <summary>
        /// objects is an array of resources to include in this template. If a
        /// namespace value is hardcoded in the object, it will be removed
        /// during template instantiation, however if the namespace value is,
        /// or contains, a ${PARAMETER_REFERENCE}, the resolved value after
        /// parameter substitution will be respected and the object will be
        /// created in that namespace.
        /// </summary>
        [JsonProperty(PropertyName = "objects")]
        public IList<Iok8sapimachinerypkgruntimeRawExtension> Objects { get; set; }

        /// <summary>
        /// parameters is an optional array of Parameters used during the
        /// Template to Config transformation.
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IList<Comgithubopenshiftoriginpkgtemplateapistemplatev1Parameter> Parameters { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Objects == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Objects");
            }
            if (this.Metadata != null)
            {
                this.Metadata.Validate();
            }
            if (this.Objects != null)
            {
                foreach (var element in this.Objects)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.Parameters != null)
            {
                foreach (var element1 in this.Parameters)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
