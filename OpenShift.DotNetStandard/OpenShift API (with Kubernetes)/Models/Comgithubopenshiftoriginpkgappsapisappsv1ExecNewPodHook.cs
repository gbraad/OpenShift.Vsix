// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// ExecNewPodHook is a hook implementation which runs a command in a new
    /// pod based on the specified container which is assumed to be part of
    /// the deployment template.
    /// </summary>
    public partial class Comgithubopenshiftoriginpkgappsapisappsv1ExecNewPodHook
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgappsapisappsv1ExecNewPodHook class.
        /// </summary>
        public Comgithubopenshiftoriginpkgappsapisappsv1ExecNewPodHook() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgappsapisappsv1ExecNewPodHook class.
        /// </summary>
        public Comgithubopenshiftoriginpkgappsapisappsv1ExecNewPodHook(IList<string> command, string containerName, IList<Iok8skubernetespkgapiv1EnvVar> env = default(IList<Iok8skubernetespkgapiv1EnvVar>), IList<string> volumes = default(IList<string>))
        {
            Command = command;
            ContainerName = containerName;
            Env = env;
            Volumes = volumes;
        }

        /// <summary>
        /// Command is the action command and its arguments.
        /// </summary>
        [JsonProperty(PropertyName = "command")]
        public IList<string> Command { get; set; }

        /// <summary>
        /// ContainerName is the name of a container in the deployment pod
        /// template whose Docker image will be used for the hook pod's
        /// container.
        /// </summary>
        [JsonProperty(PropertyName = "containerName")]
        public string ContainerName { get; set; }

        /// <summary>
        /// Env is a set of environment variables to supply to the hook pod's
        /// container.
        /// </summary>
        [JsonProperty(PropertyName = "env")]
        public IList<Iok8skubernetespkgapiv1EnvVar> Env { get; set; }

        /// <summary>
        /// Volumes is a list of named volumes from the pod template which
        /// should be copied to the hook pod. Volumes names not found in pod
        /// spec are ignored. An empty list means no volumes will be copied.
        /// </summary>
        [JsonProperty(PropertyName = "volumes")]
        public IList<string> Volumes { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Command == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Command");
            }
            if (ContainerName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ContainerName");
            }
            if (this.Env != null)
            {
                foreach (var element in this.Env)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
