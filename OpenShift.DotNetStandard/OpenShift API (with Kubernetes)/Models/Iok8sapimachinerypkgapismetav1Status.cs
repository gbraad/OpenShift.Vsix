// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Status is a return value for calls that don't return other objects.
    /// </summary>
    public partial class Iok8sapimachinerypkgapismetav1Status
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapimachinerypkgapismetav1Status class.
        /// </summary>
        public Iok8sapimachinerypkgapismetav1Status() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapimachinerypkgapismetav1Status class.
        /// </summary>
        public Iok8sapimachinerypkgapismetav1Status(string apiVersion = default(string), int? code = default(int?), Iok8sapimachinerypkgapismetav1StatusDetails details = default(Iok8sapimachinerypkgapismetav1StatusDetails), string kind = default(string), string message = default(string), Iok8sapimachinerypkgapismetav1ListMeta metadata = default(Iok8sapimachinerypkgapismetav1ListMeta), string reason = default(string), string status = default(string))
        {
            ApiVersion = apiVersion;
            Code = code;
            Details = details;
            Kind = kind;
            Message = message;
            Metadata = metadata;
            Reason = reason;
            Status = status;
        }

        /// <summary>
        /// APIVersion defines the versioned schema of this representation of
        /// an object. Servers should convert recognized schemas to the
        /// latest internal value, and may reject unrecognized values. More
        /// info:
        /// https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
        /// </summary>
        [JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Suggested HTTP return code for this status, 0 if not set.
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public int? Code { get; set; }

        /// <summary>
        /// Extended data associated with the reason.  Each reason may define
        /// its own extended details. This field is optional and the data
        /// returned is not guaranteed to conform to any schema except that
        /// defined by the reason type.
        /// </summary>
        [JsonProperty(PropertyName = "details")]
        public Iok8sapimachinerypkgapismetav1StatusDetails Details { get; set; }

        /// <summary>
        /// Kind is a string value representing the REST resource this object
        /// represents. Servers may infer this from the endpoint the client
        /// submits requests to. Cannot be updated. In CamelCase. More info:
        /// https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// A human-readable description of the status of this operation.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Standard list metadata. More info:
        /// https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public Iok8sapimachinerypkgapismetav1ListMeta Metadata { get; set; }

        /// <summary>
        /// A machine-readable description of why this operation is in the
        /// "Failure" status. If this value is empty there is no information
        /// available. A Reason clarifies an HTTP status code but does not
        /// override it.
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

        /// <summary>
        /// Status of the operation. One of: "Success" or "Failure". More
        /// info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

    }
}
