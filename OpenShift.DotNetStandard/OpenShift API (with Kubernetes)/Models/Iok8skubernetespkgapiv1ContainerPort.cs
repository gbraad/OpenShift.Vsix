// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// ContainerPort represents a network port in a single container.
    /// </summary>
    public partial class Iok8skubernetespkgapiv1ContainerPort
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1ContainerPort class.
        /// </summary>
        public Iok8skubernetespkgapiv1ContainerPort() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1ContainerPort class.
        /// </summary>
        public Iok8skubernetespkgapiv1ContainerPort(int containerPort, string hostIP = default(string), int? hostPort = default(int?), string name = default(string), string protocol = default(string))
        {
            ContainerPort = containerPort;
            HostIP = hostIP;
            HostPort = hostPort;
            Name = name;
            Protocol = protocol;
        }

        /// <summary>
        /// Number of port to expose on the pod's IP address. This must be a
        /// valid port number, 0 &lt; x &lt; 65536.
        /// </summary>
        [JsonProperty(PropertyName = "containerPort")]
        public int ContainerPort { get; set; }

        /// <summary>
        /// What host IP to bind the external port to.
        /// </summary>
        [JsonProperty(PropertyName = "hostIP")]
        public string HostIP { get; set; }

        /// <summary>
        /// Number of port to expose on the host. If specified, this must be a
        /// valid port number, 0 &lt; x &lt; 65536. If HostNetwork is
        /// specified, this must match ContainerPort. Most containers do not
        /// need this.
        /// </summary>
        [JsonProperty(PropertyName = "hostPort")]
        public int? HostPort { get; set; }

        /// <summary>
        /// If specified, this must be an IANA_SVC_NAME and unique within the
        /// pod. Each named port in a pod must have a unique name. Name for
        /// the port that can be referred to by services.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Protocol for port. Must be UDP or TCP. Defaults to "TCP".
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public string Protocol { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
