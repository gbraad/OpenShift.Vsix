// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// A route allows developers to expose services through an HTTP(S) aware
    /// load balancing and proxy layer via a public DNS entry. The route may
    /// further specify TLS options and a certificate, or specify a public
    /// CNAME that the router should also accept for HTTP and HTTPS traffic.
    /// An administrator typically configures their router to be visible
    /// outside the cluster firewall, and may also add additional security,
    /// caching, or traffic controls on the service content. Routers usually
    /// talk directly to the service endpoints.
    /// 
    /// Once a route is created, the `host` field may not be changed.
    /// Generally, routers use the oldest route with a given host when
    /// resolving conflicts.
    /// 
    /// Routers are subject to additional customization and may support
    /// additional controls via the annotations field.
    /// 
    /// Because administrators may configure multiple routers, the route
    /// status field is used to return information to clients about the names
    /// and states of the route under each router. If a client chooses a
    /// duplicate name, for instance, the route status conditions are used to
    /// indicate the route cannot be chosen.
    /// </summary>
    public partial class Comgithubopenshiftoriginpkgrouteapisroutev1Route
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgrouteapisroutev1Route class.
        /// </summary>
        public Comgithubopenshiftoriginpkgrouteapisroutev1Route() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgrouteapisroutev1Route class.
        /// </summary>
        public Comgithubopenshiftoriginpkgrouteapisroutev1Route(Comgithubopenshiftoriginpkgrouteapisroutev1RouteSpec spec, Comgithubopenshiftoriginpkgrouteapisroutev1RouteStatus status, string apiVersion = default(string), string kind = default(string), Iok8sapimachinerypkgapismetav1ObjectMeta metadata = default(Iok8sapimachinerypkgapismetav1ObjectMeta))
        {
            ApiVersion = apiVersion;
            Kind = kind;
            Metadata = metadata;
            Spec = spec;
            Status = status;
        }

        /// <summary>
        /// APIVersion defines the versioned schema of this representation of
        /// an object. Servers should convert recognized schemas to the
        /// latest internal value, and may reject unrecognized values. More
        /// info:
        /// https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
        /// </summary>
        [JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Kind is a string value representing the REST resource this object
        /// represents. Servers may infer this from the endpoint the client
        /// submits requests to. Cannot be updated. In CamelCase. More info:
        /// https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Standard object metadata.
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public Iok8sapimachinerypkgapismetav1ObjectMeta Metadata { get; set; }

        /// <summary>
        /// spec is the desired state of the route
        /// </summary>
        [JsonProperty(PropertyName = "spec")]
        public Comgithubopenshiftoriginpkgrouteapisroutev1RouteSpec Spec { get; set; }

        /// <summary>
        /// status is the current state of the route
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public Comgithubopenshiftoriginpkgrouteapisroutev1RouteStatus Status { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Spec == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Spec");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (this.Metadata != null)
            {
                this.Metadata.Validate();
            }
            if (this.Spec != null)
            {
                this.Spec.Validate();
            }
            if (this.Status != null)
            {
                this.Status.Validate();
            }
        }
    }
}
