// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// RecreateDeploymentStrategyParams are the input to the Recreate
    /// deployment strategy.
    /// </summary>
    public partial class Comgithubopenshiftoriginpkgappsapisappsv1RecreateDeploymentStrategyParams
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgappsapisappsv1RecreateDeploymentStrategyParams
        /// class.
        /// </summary>
        public Comgithubopenshiftoriginpkgappsapisappsv1RecreateDeploymentStrategyParams() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgappsapisappsv1RecreateDeploymentStrategyParams
        /// class.
        /// </summary>
        public Comgithubopenshiftoriginpkgappsapisappsv1RecreateDeploymentStrategyParams(Comgithubopenshiftoriginpkgappsapisappsv1LifecycleHook mid = default(Comgithubopenshiftoriginpkgappsapisappsv1LifecycleHook), Comgithubopenshiftoriginpkgappsapisappsv1LifecycleHook post = default(Comgithubopenshiftoriginpkgappsapisappsv1LifecycleHook), Comgithubopenshiftoriginpkgappsapisappsv1LifecycleHook pre = default(Comgithubopenshiftoriginpkgappsapisappsv1LifecycleHook), long? timeoutSeconds = default(long?))
        {
            Mid = mid;
            Post = post;
            Pre = pre;
            TimeoutSeconds = timeoutSeconds;
        }

        /// <summary>
        /// Mid is a lifecycle hook which is executed while the deployment is
        /// scaled down to zero before the first new pod is created. All
        /// LifecycleHookFailurePolicy values are supported.
        /// </summary>
        [JsonProperty(PropertyName = "mid")]
        public Comgithubopenshiftoriginpkgappsapisappsv1LifecycleHook Mid { get; set; }

        /// <summary>
        /// Post is a lifecycle hook which is executed after the strategy has
        /// finished all deployment logic. All LifecycleHookFailurePolicy
        /// values are supported.
        /// </summary>
        [JsonProperty(PropertyName = "post")]
        public Comgithubopenshiftoriginpkgappsapisappsv1LifecycleHook Post { get; set; }

        /// <summary>
        /// Pre is a lifecycle hook which is executed before the strategy
        /// manipulates the deployment. All LifecycleHookFailurePolicy values
        /// are supported.
        /// </summary>
        [JsonProperty(PropertyName = "pre")]
        public Comgithubopenshiftoriginpkgappsapisappsv1LifecycleHook Pre { get; set; }

        /// <summary>
        /// TimeoutSeconds is the time to wait for updates before giving up.
        /// If the value is nil, a default will be used.
        /// </summary>
        [JsonProperty(PropertyName = "timeoutSeconds")]
        public long? TimeoutSeconds { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.Mid != null)
            {
                this.Mid.Validate();
            }
            if (this.Post != null)
            {
                this.Post.Validate();
            }
            if (this.Pre != null)
            {
                this.Pre.Validate();
            }
        }
    }
}
