// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Adapts a ConfigMap into a projected volume.
    /// 
    /// The contents of the target ConfigMap's Data field will be presented in
    /// a projected volume as files using the keys in the Data field as the
    /// file names, unless the items element is populated with specific
    /// mappings of keys to paths. Note that this is identical to a configmap
    /// volume source without the default mode.
    /// </summary>
    public partial class Iok8skubernetespkgapiv1ConfigMapProjection
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1ConfigMapProjection class.
        /// </summary>
        public Iok8skubernetespkgapiv1ConfigMapProjection() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1ConfigMapProjection class.
        /// </summary>
        public Iok8skubernetespkgapiv1ConfigMapProjection(IList<Iok8skubernetespkgapiv1KeyToPath> items = default(IList<Iok8skubernetespkgapiv1KeyToPath>), string name = default(string), bool? optional = default(bool?))
        {
            Items = items;
            Name = name;
            Optional = optional;
        }

        /// <summary>
        /// If unspecified, each key-value pair in the Data field of the
        /// referenced ConfigMap will be projected into the volume as a file
        /// whose name is the key and content is the value. If specified, the
        /// listed keys will be projected into the specified paths, and
        /// unlisted keys will not be present. If a key is specified which is
        /// not present in the ConfigMap, the volume setup will error unless
        /// it is marked optional. Paths must be relative and may not contain
        /// the '..' path or start with '..'.
        /// </summary>
        [JsonProperty(PropertyName = "items")]
        public IList<Iok8skubernetespkgapiv1KeyToPath> Items { get; set; }

        /// <summary>
        /// Name of the referent. More info:
        /// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Specify whether the ConfigMap or it's keys must be defined
        /// </summary>
        [JsonProperty(PropertyName = "optional")]
        public bool? Optional { get; set; }

    }
}
