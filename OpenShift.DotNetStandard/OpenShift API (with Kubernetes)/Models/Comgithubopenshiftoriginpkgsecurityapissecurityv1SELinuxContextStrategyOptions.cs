// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// SELinuxContextStrategyOptions defines the strategy type and any
    /// options used to create the strategy.
    /// </summary>
    public partial class Comgithubopenshiftoriginpkgsecurityapissecurityv1SELinuxContextStrategyOptions
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgsecurityapissecurityv1SELinuxContextStrategyOptions
        /// class.
        /// </summary>
        public Comgithubopenshiftoriginpkgsecurityapissecurityv1SELinuxContextStrategyOptions() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgsecurityapissecurityv1SELinuxContextStrategyOptions
        /// class.
        /// </summary>
        public Comgithubopenshiftoriginpkgsecurityapissecurityv1SELinuxContextStrategyOptions(Iok8skubernetespkgapiv1SELinuxOptions seLinuxOptions = default(Iok8skubernetespkgapiv1SELinuxOptions), string type = default(string))
        {
            SeLinuxOptions = seLinuxOptions;
            Type = type;
        }

        /// <summary>
        /// seLinuxOptions required to run as; required for MustRunAs
        /// </summary>
        [JsonProperty(PropertyName = "seLinuxOptions")]
        public Iok8skubernetespkgapiv1SELinuxOptions SeLinuxOptions { get; set; }

        /// <summary>
        /// Type is the strategy that will dictate what SELinux context is
        /// used in the SecurityContext.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

    }
}
