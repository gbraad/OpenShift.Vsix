// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// BinaryBuildSource describes a binary file to be used for the Docker
    /// and Source build strategies, where the file will be extracted and
    /// used as the build source.
    /// </summary>
    public partial class Comgithubopenshiftoriginpkgbuildapisbuildv1BinaryBuildSource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgbuildapisbuildv1BinaryBuildSource
        /// class.
        /// </summary>
        public Comgithubopenshiftoriginpkgbuildapisbuildv1BinaryBuildSource() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftoriginpkgbuildapisbuildv1BinaryBuildSource
        /// class.
        /// </summary>
        public Comgithubopenshiftoriginpkgbuildapisbuildv1BinaryBuildSource(string asFile = default(string))
        {
            AsFile = asFile;
        }

        /// <summary>
        /// asFile indicates that the provided binary input should be
        /// considered a single file within the build input. For example,
        /// specifying "webapp.war" would place the provided binary as
        /// `/webapp.war` for the builder. If left empty, the Docker and
        /// Source build strategies assume this file is a zip, tar, or tar.gz
        /// file and extract it as the source. The custom strategy receives
        /// this binary as standard input. This filename may not contain
        /// slashes or be '..' or '.'.
        /// </summary>
        [JsonProperty(PropertyName = "asFile")]
        public string AsFile { get; set; }

    }
}
