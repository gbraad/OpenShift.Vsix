// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// UserInfo holds the information about the user needed to implement the
    /// user.Info interface.
    /// </summary>
    public partial class Iok8sapiauthenticationv1beta1UserInfo
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapiauthenticationv1beta1UserInfo class.
        /// </summary>
        public Iok8sapiauthenticationv1beta1UserInfo() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapiauthenticationv1beta1UserInfo class.
        /// </summary>
        public Iok8sapiauthenticationv1beta1UserInfo(IDictionary<string, IList<string>> extra = default(IDictionary<string, IList<string>>), IList<string> groups = default(IList<string>), string uid = default(string), string username = default(string))
        {
            Extra = extra;
            Groups = groups;
            Uid = uid;
            Username = username;
        }

        /// <summary>
        /// Any additional information provided by the authenticator.
        /// </summary>
        [JsonProperty(PropertyName = "extra")]
        public IDictionary<string, IList<string>> Extra { get; set; }

        /// <summary>
        /// The names of groups this user is a part of.
        /// </summary>
        [JsonProperty(PropertyName = "groups")]
        public IList<string> Groups { get; set; }

        /// <summary>
        /// A unique value that identifies this user across time. If this user
        /// is deleted and another user by the same name is added, they will
        /// have different UIDs.
        /// </summary>
        [JsonProperty(PropertyName = "uid")]
        public string Uid { get; set; }

        /// <summary>
        /// The name that uniquely identifies this user among all active users.
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

    }
}
