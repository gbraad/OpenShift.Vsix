// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// RepositoryImportSpec describes a request to import images from a
    /// Docker image repository.
    /// </summary>
    public partial class Comgithubopenshiftapiimagev1RepositoryImportSpec
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapiimagev1RepositoryImportSpec class.
        /// </summary>
        public Comgithubopenshiftapiimagev1RepositoryImportSpec() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapiimagev1RepositoryImportSpec class.
        /// </summary>
        public Comgithubopenshiftapiimagev1RepositoryImportSpec(Iok8sapicorev1ObjectReference fromProperty, Comgithubopenshiftapiimagev1TagImportPolicy importPolicy = default(Comgithubopenshiftapiimagev1TagImportPolicy), bool? includeManifest = default(bool?), Comgithubopenshiftapiimagev1TagReferencePolicy referencePolicy = default(Comgithubopenshiftapiimagev1TagReferencePolicy))
        {
            FromProperty = fromProperty;
            ImportPolicy = importPolicy;
            IncludeManifest = includeManifest;
            ReferencePolicy = referencePolicy;
        }

        /// <summary>
        /// From is the source for the image repository to import; only kind
        /// DockerImage and a name of a Docker image repository is allowed
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public Iok8sapicorev1ObjectReference FromProperty { get; set; }

        /// <summary>
        /// ImportPolicy is the policy controlling how the image is imported
        /// </summary>
        [JsonProperty(PropertyName = "importPolicy")]
        public Comgithubopenshiftapiimagev1TagImportPolicy ImportPolicy { get; set; }

        /// <summary>
        /// IncludeManifest determines if the manifest for each image is
        /// returned in the response
        /// </summary>
        [JsonProperty(PropertyName = "includeManifest")]
        public bool? IncludeManifest { get; set; }

        /// <summary>
        /// ReferencePolicy defines how other components should consume the
        /// image
        /// </summary>
        [JsonProperty(PropertyName = "referencePolicy")]
        public Comgithubopenshiftapiimagev1TagReferencePolicy ReferencePolicy { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (FromProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FromProperty");
            }
            if (this.ReferencePolicy != null)
            {
                this.ReferencePolicy.Validate();
            }
        }
    }
}
