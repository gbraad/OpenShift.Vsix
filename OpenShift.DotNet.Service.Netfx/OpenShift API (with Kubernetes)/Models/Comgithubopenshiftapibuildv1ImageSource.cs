// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// ImageSource is used to describe build source that will be extracted
    /// from an image. A reference of type ImageStreamTag, ImageStreamImage
    /// or DockerImage may be used. A pull secret can be specified to pull
    /// the image from an external registry or override the default service
    /// account secret if pulling from the internal registry. A list of paths
    /// to copy from the image and their respective destination within the
    /// build directory must be specified in the paths array.
    /// </summary>
    public partial class Comgithubopenshiftapibuildv1ImageSource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapibuildv1ImageSource class.
        /// </summary>
        public Comgithubopenshiftapibuildv1ImageSource() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapibuildv1ImageSource class.
        /// </summary>
        public Comgithubopenshiftapibuildv1ImageSource(Iok8sapicorev1ObjectReference fromProperty, IList<Comgithubopenshiftapibuildv1ImageSourcePath> paths, Iok8sapicorev1LocalObjectReference pullSecret = default(Iok8sapicorev1LocalObjectReference))
        {
            FromProperty = fromProperty;
            Paths = paths;
            PullSecret = pullSecret;
        }

        /// <summary>
        /// from is a reference to an ImageStreamTag, ImageStreamImage, or
        /// DockerImage to copy source from.
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public Iok8sapicorev1ObjectReference FromProperty { get; set; }

        /// <summary>
        /// paths is a list of source and destination paths to copy from the
        /// image.
        /// </summary>
        [JsonProperty(PropertyName = "paths")]
        public IList<Comgithubopenshiftapibuildv1ImageSourcePath> Paths { get; set; }

        /// <summary>
        /// pullSecret is a reference to a secret to be used to pull the image
        /// from a registry If the image is pulled from the OpenShift
        /// registry, this field does not need to be set.
        /// </summary>
        [JsonProperty(PropertyName = "pullSecret")]
        public Iok8sapicorev1LocalObjectReference PullSecret { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (FromProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FromProperty");
            }
            if (Paths == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Paths");
            }
            if (this.Paths != null)
            {
                foreach (var element in this.Paths)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
