// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// NonResourceRule holds information that describes a rule for the
    /// non-resource
    /// </summary>
    public partial class Iok8sapiauthorizationv1NonResourceRule
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapiauthorizationv1NonResourceRule class.
        /// </summary>
        public Iok8sapiauthorizationv1NonResourceRule() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapiauthorizationv1NonResourceRule class.
        /// </summary>
        public Iok8sapiauthorizationv1NonResourceRule(IList<string> verbs, IList<string> nonResourceURLs = default(IList<string>))
        {
            NonResourceURLs = nonResourceURLs;
            Verbs = verbs;
        }

        /// <summary>
        /// NonResourceURLs is a set of partial urls that a user should have
        /// access to.  *s are allowed, but only as the full, final step in
        /// the path.  "*" means all.
        /// </summary>
        [JsonProperty(PropertyName = "nonResourceURLs")]
        public IList<string> NonResourceURLs { get; set; }

        /// <summary>
        /// Verb is a list of kubernetes non-resource API verbs, like: get,
        /// post, put, delete, patch, head, options.  "*" means all.
        /// </summary>
        [JsonProperty(PropertyName = "verbs")]
        public IList<string> Verbs { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Verbs == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Verbs");
            }
        }
    }
}
