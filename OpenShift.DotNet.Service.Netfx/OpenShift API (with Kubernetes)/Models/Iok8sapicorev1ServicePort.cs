// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// ServicePort contains information on service's port.
    /// </summary>
    public partial class Iok8sapicorev1ServicePort
    {
        /// <summary>
        /// Initializes a new instance of the Iok8sapicorev1ServicePort class.
        /// </summary>
        public Iok8sapicorev1ServicePort() { }

        /// <summary>
        /// Initializes a new instance of the Iok8sapicorev1ServicePort class.
        /// </summary>
        public Iok8sapicorev1ServicePort(int port, string name = default(string), int? nodePort = default(int?), string protocol = default(string), string targetPort = default(string))
        {
            Name = name;
            NodePort = nodePort;
            Port = port;
            Protocol = protocol;
            TargetPort = targetPort;
        }

        /// <summary>
        /// The name of this port within the service. This must be a
        /// DNS_LABEL. All ports within a ServiceSpec must have unique names.
        /// This maps to the 'Name' field in EndpointPort objects. Optional
        /// if only one ServicePort is defined on this service.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// The port on each node on which this service is exposed when
        /// type=NodePort or LoadBalancer. Usually assigned by the system. If
        /// specified, it will be allocated to the service if unused or else
        /// creation of the service will fail. Default is to auto-allocate a
        /// port if the ServiceType of this Service requires one. More info:
        /// https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
        /// </summary>
        [JsonProperty(PropertyName = "nodePort")]
        public int? NodePort { get; set; }

        /// <summary>
        /// The port that will be exposed by this service.
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int Port { get; set; }

        /// <summary>
        /// The IP protocol for this port. Supports "TCP" and "UDP". Default
        /// is TCP.
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public string Protocol { get; set; }

        /// <summary>
        /// Number or name of the port to access on the pods targeted by the
        /// service. Number must be in the range 1 to 65535. Name must be an
        /// IANA_SVC_NAME. If this is a string, it will be looked up as a
        /// named port in the target Pod's container ports. If this is not
        /// specified, the value of the 'port' field is used (an identity
        /// map). This field is ignored for services with clusterIP=None, and
        /// should be omitted or set equal to the 'port' field. More info:
        /// https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
        /// </summary>
        [JsonProperty(PropertyName = "targetPort")]
        public object TargetPort { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
