// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// DaemonSetSpec is the specification of a daemon set.
    /// </summary>
    public partial class Iok8sapiextensionsv1beta1DaemonSetSpec
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapiextensionsv1beta1DaemonSetSpec class.
        /// </summary>
        public Iok8sapiextensionsv1beta1DaemonSetSpec() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapiextensionsv1beta1DaemonSetSpec class.
        /// </summary>
        public Iok8sapiextensionsv1beta1DaemonSetSpec(Iok8sapicorev1PodTemplateSpec template, int? minReadySeconds = default(int?), int? revisionHistoryLimit = default(int?), Iok8sapimachinerypkgapismetav1LabelSelector selector = default(Iok8sapimachinerypkgapismetav1LabelSelector), long? templateGeneration = default(long?), Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy updateStrategy = default(Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy))
        {
            MinReadySeconds = minReadySeconds;
            RevisionHistoryLimit = revisionHistoryLimit;
            Selector = selector;
            Template = template;
            TemplateGeneration = templateGeneration;
            UpdateStrategy = updateStrategy;
        }

        /// <summary>
        /// The minimum number of seconds for which a newly created DaemonSet
        /// pod should be ready without any of its container crashing, for it
        /// to be considered available. Defaults to 0 (pod will be considered
        /// available as soon as it is ready).
        /// </summary>
        [JsonProperty(PropertyName = "minReadySeconds")]
        public int? MinReadySeconds { get; set; }

        /// <summary>
        /// The number of old history to retain to allow rollback. This is a
        /// pointer to distinguish between explicit zero and not specified.
        /// Defaults to 10.
        /// </summary>
        [JsonProperty(PropertyName = "revisionHistoryLimit")]
        public int? RevisionHistoryLimit { get; set; }

        /// <summary>
        /// A label query over pods that are managed by the daemon set. Must
        /// match in order to be controlled. If empty, defaulted to labels on
        /// Pod template. More info:
        /// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
        /// </summary>
        [JsonProperty(PropertyName = "selector")]
        public Iok8sapimachinerypkgapismetav1LabelSelector Selector { get; set; }

        /// <summary>
        /// An object that describes the pod that will be created. The
        /// DaemonSet will create exactly one copy of this pod on every node
        /// that matches the template's node selector (or on every node if no
        /// node selector is specified). More info:
        /// https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
        /// </summary>
        [JsonProperty(PropertyName = "template")]
        public Iok8sapicorev1PodTemplateSpec Template { get; set; }

        /// <summary>
        /// DEPRECATED. A sequence number representing a specific generation
        /// of the template. Populated by the system. It can be set only
        /// during the creation.
        /// </summary>
        [JsonProperty(PropertyName = "templateGeneration")]
        public long? TemplateGeneration { get; set; }

        /// <summary>
        /// An update strategy to replace existing DaemonSet pods with new
        /// pods.
        /// </summary>
        [JsonProperty(PropertyName = "updateStrategy")]
        public Iok8sapiextensionsv1beta1DaemonSetUpdateStrategy UpdateStrategy { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Template == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Template");
            }
            if (this.Template != null)
            {
                this.Template.Validate();
            }
        }
    }
}
