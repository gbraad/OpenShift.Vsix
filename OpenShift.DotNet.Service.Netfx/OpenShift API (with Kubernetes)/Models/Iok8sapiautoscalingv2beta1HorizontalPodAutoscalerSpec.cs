// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// HorizontalPodAutoscalerSpec describes the desired functionality of the
    /// HorizontalPodAutoscaler.
    /// </summary>
    public partial class Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec class.
        /// </summary>
        public Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec class.
        /// </summary>
        public Iok8sapiautoscalingv2beta1HorizontalPodAutoscalerSpec(int maxReplicas, Iok8sapiautoscalingv2beta1CrossVersionObjectReference scaleTargetRef, IList<Iok8sapiautoscalingv2beta1MetricSpec> metrics = default(IList<Iok8sapiautoscalingv2beta1MetricSpec>), int? minReplicas = default(int?))
        {
            MaxReplicas = maxReplicas;
            Metrics = metrics;
            MinReplicas = minReplicas;
            ScaleTargetRef = scaleTargetRef;
        }

        /// <summary>
        /// maxReplicas is the upper limit for the number of replicas to which
        /// the autoscaler can scale up. It cannot be less that minReplicas.
        /// </summary>
        [JsonProperty(PropertyName = "maxReplicas")]
        public int MaxReplicas { get; set; }

        /// <summary>
        /// metrics contains the specifications for which to use to calculate
        /// the desired replica count (the maximum replica count across all
        /// metrics will be used).  The desired replica count is calculated
        /// multiplying the ratio between the target value and the current
        /// value by the current number of pods.  Ergo, metrics used must
        /// decrease as the pod count is increased, and vice-versa.  See the
        /// individual metric source types for more information about how
        /// each type of metric must respond.
        /// </summary>
        [JsonProperty(PropertyName = "metrics")]
        public IList<Iok8sapiautoscalingv2beta1MetricSpec> Metrics { get; set; }

        /// <summary>
        /// minReplicas is the lower limit for the number of replicas to which
        /// the autoscaler can scale down. It defaults to 1 pod.
        /// </summary>
        [JsonProperty(PropertyName = "minReplicas")]
        public int? MinReplicas { get; set; }

        /// <summary>
        /// scaleTargetRef points to the target resource to scale, and is used
        /// to the pods for which metrics should be collected, as well as to
        /// actually change the replica count.
        /// </summary>
        [JsonProperty(PropertyName = "scaleTargetRef")]
        public Iok8sapiautoscalingv2beta1CrossVersionObjectReference ScaleTargetRef { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (ScaleTargetRef == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ScaleTargetRef");
            }
            if (this.Metrics != null)
            {
                foreach (var element in this.Metrics)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.ScaleTargetRef != null)
            {
                this.ScaleTargetRef.Validate();
            }
        }
    }
}
