// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Represents a cinder volume resource in Openstack. A Cinder volume must
    /// exist before mounting to a container. The volume must also be in the
    /// same region as the kubelet. Cinder volumes support ownership
    /// management and SELinux relabeling.
    /// </summary>
    public partial class Iok8sapicorev1CinderVolumeSource
    {
        /// <summary>
        /// Initializes a new instance of the Iok8sapicorev1CinderVolumeSource
        /// class.
        /// </summary>
        public Iok8sapicorev1CinderVolumeSource() { }

        /// <summary>
        /// Initializes a new instance of the Iok8sapicorev1CinderVolumeSource
        /// class.
        /// </summary>
        public Iok8sapicorev1CinderVolumeSource(string volumeID, string fsType = default(string), bool? readOnlyProperty = default(bool?))
        {
            FsType = fsType;
            ReadOnlyProperty = readOnlyProperty;
            VolumeID = volumeID;
        }

        /// <summary>
        /// Filesystem type to mount. Must be a filesystem type supported by
        /// the host operating system. Examples: "ext4", "xfs", "ntfs".
        /// Implicitly inferred to be "ext4" if unspecified. More info:
        /// https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
        /// </summary>
        [JsonProperty(PropertyName = "fsType")]
        public string FsType { get; set; }

        /// <summary>
        /// Optional: Defaults to false (read/write). ReadOnly here will force
        /// the ReadOnly setting in VolumeMounts. More info:
        /// https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
        /// </summary>
        [JsonProperty(PropertyName = "readOnly")]
        public bool? ReadOnlyProperty { get; set; }

        /// <summary>
        /// volume id used to identify the volume in cinder More info:
        /// https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
        /// </summary>
        [JsonProperty(PropertyName = "volumeID")]
        public string VolumeID { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (VolumeID == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VolumeID");
            }
        }
    }
}
