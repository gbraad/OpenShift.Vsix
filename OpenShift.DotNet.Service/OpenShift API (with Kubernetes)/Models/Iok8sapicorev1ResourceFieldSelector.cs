// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// ResourceFieldSelector represents container resources (cpu, memory) and
    /// their output format
    /// </summary>
    public partial class Iok8sapicorev1ResourceFieldSelector
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapicorev1ResourceFieldSelector class.
        /// </summary>
        public Iok8sapicorev1ResourceFieldSelector() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8sapicorev1ResourceFieldSelector class.
        /// </summary>
        public Iok8sapicorev1ResourceFieldSelector(string resource, string containerName = default(string), string divisor = default(string))
        {
            ContainerName = containerName;
            Divisor = divisor;
            Resource = resource;
        }

        /// <summary>
        /// Container name: required for volumes, optional for env vars
        /// </summary>
        [JsonProperty(PropertyName = "containerName")]
        public string ContainerName { get; set; }

        /// <summary>
        /// Specifies the output format of the exposed resources, defaults to
        /// "1"
        /// </summary>
        [JsonProperty(PropertyName = "divisor")]
        public string Divisor { get; set; }

        /// <summary>
        /// Required: resource to select
        /// </summary>
        [JsonProperty(PropertyName = "resource")]
        public string Resource { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Resource == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Resource");
            }
        }
    }
}
