// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// BuildRequest is the resource used to pass parameters to build generator
    /// </summary>
    public partial class Comgithubopenshiftapibuildv1BuildRequest
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapibuildv1BuildRequest class.
        /// </summary>
        public Comgithubopenshiftapibuildv1BuildRequest() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapibuildv1BuildRequest class.
        /// </summary>
        public Comgithubopenshiftapibuildv1BuildRequest(IList<Comgithubopenshiftapibuildv1BuildTriggerCause> triggeredBy, string apiVersion = default(string), Comgithubopenshiftapibuildv1BinaryBuildSource binary = default(Comgithubopenshiftapibuildv1BinaryBuildSource), Comgithubopenshiftapibuildv1DockerStrategyOptions dockerStrategyOptions = default(Comgithubopenshiftapibuildv1DockerStrategyOptions), IList<Iok8sapicorev1EnvVar> env = default(IList<Iok8sapicorev1EnvVar>), Iok8sapicorev1ObjectReference fromProperty = default(Iok8sapicorev1ObjectReference), string kind = default(string), long? lastVersion = default(long?), Iok8sapimachinerypkgapismetav1ObjectMeta metadata = default(Iok8sapimachinerypkgapismetav1ObjectMeta), Comgithubopenshiftapibuildv1SourceRevision revision = default(Comgithubopenshiftapibuildv1SourceRevision), Comgithubopenshiftapibuildv1SourceStrategyOptions sourceStrategyOptions = default(Comgithubopenshiftapibuildv1SourceStrategyOptions), Iok8sapicorev1ObjectReference triggeredByImage = default(Iok8sapicorev1ObjectReference))
        {
            ApiVersion = apiVersion;
            Binary = binary;
            DockerStrategyOptions = dockerStrategyOptions;
            Env = env;
            FromProperty = fromProperty;
            Kind = kind;
            LastVersion = lastVersion;
            Metadata = metadata;
            Revision = revision;
            SourceStrategyOptions = sourceStrategyOptions;
            TriggeredBy = triggeredBy;
            TriggeredByImage = triggeredByImage;
        }

        /// <summary>
        /// APIVersion defines the versioned schema of this representation of
        /// an object. Servers should convert recognized schemas to the
        /// latest internal value, and may reject unrecognized values. More
        /// info:
        /// https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
        /// </summary>
        [JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// binary indicates a request to build from a binary provided to the
        /// builder
        /// </summary>
        [JsonProperty(PropertyName = "binary")]
        public Comgithubopenshiftapibuildv1BinaryBuildSource Binary { get; set; }

        /// <summary>
        /// DockerStrategyOptions contains additional docker-strategy specific
        /// options for the build
        /// </summary>
        [JsonProperty(PropertyName = "dockerStrategyOptions")]
        public Comgithubopenshiftapibuildv1DockerStrategyOptions DockerStrategyOptions { get; set; }

        /// <summary>
        /// env contains additional environment variables you want to pass
        /// into a builder container.
        /// </summary>
        [JsonProperty(PropertyName = "env")]
        public IList<Iok8sapicorev1EnvVar> Env { get; set; }

        /// <summary>
        /// from is the reference to the ImageStreamTag that triggered the
        /// build.
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public Iok8sapicorev1ObjectReference FromProperty { get; set; }

        /// <summary>
        /// Kind is a string value representing the REST resource this object
        /// represents. Servers may infer this from the endpoint the client
        /// submits requests to. Cannot be updated. In CamelCase. More info:
        /// https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// lastVersion (optional) is the LastVersion of the BuildConfig that
        /// was used to generate the build. If the BuildConfig in the
        /// generator doesn't match, a build will not be generated.
        /// </summary>
        [JsonProperty(PropertyName = "lastVersion")]
        public long? LastVersion { get; set; }

        /// <summary>
        /// metadata for BuildRequest.
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public Iok8sapimachinerypkgapismetav1ObjectMeta Metadata { get; set; }

        /// <summary>
        /// revision is the information from the source for a specific repo
        /// snapshot.
        /// </summary>
        [JsonProperty(PropertyName = "revision")]
        public Comgithubopenshiftapibuildv1SourceRevision Revision { get; set; }

        /// <summary>
        /// SourceStrategyOptions contains additional source-strategy specific
        /// options for the build
        /// </summary>
        [JsonProperty(PropertyName = "sourceStrategyOptions")]
        public Comgithubopenshiftapibuildv1SourceStrategyOptions SourceStrategyOptions { get; set; }

        /// <summary>
        /// triggeredBy describes which triggers started the most recent
        /// update to the build configuration and contains information about
        /// those triggers.
        /// </summary>
        [JsonProperty(PropertyName = "triggeredBy")]
        public IList<Comgithubopenshiftapibuildv1BuildTriggerCause> TriggeredBy { get; set; }

        /// <summary>
        /// triggeredByImage is the Image that triggered this build.
        /// </summary>
        [JsonProperty(PropertyName = "triggeredByImage")]
        public Iok8sapicorev1ObjectReference TriggeredByImage { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (TriggeredBy == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TriggeredBy");
            }
            if (this.Env != null)
            {
                foreach (var element in this.Env)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.Metadata != null)
            {
                this.Metadata.Validate();
            }
            if (this.Revision != null)
            {
                this.Revision.Validate();
            }
            if (this.TriggeredBy != null)
            {
                foreach (var element1 in this.TriggeredBy)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
