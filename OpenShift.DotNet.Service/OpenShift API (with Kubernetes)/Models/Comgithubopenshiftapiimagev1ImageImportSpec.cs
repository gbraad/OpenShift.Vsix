// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// ImageImportSpec describes a request to import a specific image.
    /// </summary>
    public partial class Comgithubopenshiftapiimagev1ImageImportSpec
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapiimagev1ImageImportSpec class.
        /// </summary>
        public Comgithubopenshiftapiimagev1ImageImportSpec() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapiimagev1ImageImportSpec class.
        /// </summary>
        public Comgithubopenshiftapiimagev1ImageImportSpec(Iok8sapicorev1ObjectReference fromProperty, Comgithubopenshiftapiimagev1TagImportPolicy importPolicy = default(Comgithubopenshiftapiimagev1TagImportPolicy), bool? includeManifest = default(bool?), Comgithubopenshiftapiimagev1TagReferencePolicy referencePolicy = default(Comgithubopenshiftapiimagev1TagReferencePolicy), Iok8sapicorev1LocalObjectReference to = default(Iok8sapicorev1LocalObjectReference))
        {
            FromProperty = fromProperty;
            ImportPolicy = importPolicy;
            IncludeManifest = includeManifest;
            ReferencePolicy = referencePolicy;
            To = to;
        }

        /// <summary>
        /// From is the source of an image to import; only kind DockerImage is
        /// allowed
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public Iok8sapicorev1ObjectReference FromProperty { get; set; }

        /// <summary>
        /// ImportPolicy is the policy controlling how the image is imported
        /// </summary>
        [JsonProperty(PropertyName = "importPolicy")]
        public Comgithubopenshiftapiimagev1TagImportPolicy ImportPolicy { get; set; }

        /// <summary>
        /// IncludeManifest determines if the manifest for each image is
        /// returned in the response
        /// </summary>
        [JsonProperty(PropertyName = "includeManifest")]
        public bool? IncludeManifest { get; set; }

        /// <summary>
        /// ReferencePolicy defines how other components should consume the
        /// image
        /// </summary>
        [JsonProperty(PropertyName = "referencePolicy")]
        public Comgithubopenshiftapiimagev1TagReferencePolicy ReferencePolicy { get; set; }

        /// <summary>
        /// To is a tag in the current image stream to assign the imported
        /// image to, if name is not specified the default tag from from.name
        /// will be used
        /// </summary>
        [JsonProperty(PropertyName = "to")]
        public Iok8sapicorev1LocalObjectReference To { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (FromProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FromProperty");
            }
            if (this.ReferencePolicy != null)
            {
                this.ReferencePolicy.Validate();
            }
        }
    }
}
