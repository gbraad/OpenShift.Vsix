// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// BuildTriggerPolicy describes a policy for a single trigger that
    /// results in a new Build.
    /// </summary>
    public partial class Comgithubopenshiftapibuildv1BuildTriggerPolicy
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapibuildv1BuildTriggerPolicy class.
        /// </summary>
        public Comgithubopenshiftapibuildv1BuildTriggerPolicy() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapibuildv1BuildTriggerPolicy class.
        /// </summary>
        public Comgithubopenshiftapibuildv1BuildTriggerPolicy(string type, Comgithubopenshiftapibuildv1WebHookTrigger bitbucket = default(Comgithubopenshiftapibuildv1WebHookTrigger), Comgithubopenshiftapibuildv1WebHookTrigger generic = default(Comgithubopenshiftapibuildv1WebHookTrigger), Comgithubopenshiftapibuildv1WebHookTrigger github = default(Comgithubopenshiftapibuildv1WebHookTrigger), Comgithubopenshiftapibuildv1WebHookTrigger gitlab = default(Comgithubopenshiftapibuildv1WebHookTrigger), Comgithubopenshiftapibuildv1ImageChangeTrigger imageChange = default(Comgithubopenshiftapibuildv1ImageChangeTrigger))
        {
            Bitbucket = bitbucket;
            Generic = generic;
            Github = github;
            Gitlab = gitlab;
            ImageChange = imageChange;
            Type = type;
        }

        /// <summary>
        /// BitbucketWebHook contains the parameters for a Bitbucket webhook
        /// type of trigger
        /// </summary>
        [JsonProperty(PropertyName = "bitbucket")]
        public Comgithubopenshiftapibuildv1WebHookTrigger Bitbucket { get; set; }

        /// <summary>
        /// generic contains the parameters for a Generic webhook type of
        /// trigger
        /// </summary>
        [JsonProperty(PropertyName = "generic")]
        public Comgithubopenshiftapibuildv1WebHookTrigger Generic { get; set; }

        /// <summary>
        /// github contains the parameters for a GitHub webhook type of trigger
        /// </summary>
        [JsonProperty(PropertyName = "github")]
        public Comgithubopenshiftapibuildv1WebHookTrigger Github { get; set; }

        /// <summary>
        /// GitLabWebHook contains the parameters for a GitLab webhook type of
        /// trigger
        /// </summary>
        [JsonProperty(PropertyName = "gitlab")]
        public Comgithubopenshiftapibuildv1WebHookTrigger Gitlab { get; set; }

        /// <summary>
        /// imageChange contains parameters for an ImageChange type of trigger
        /// </summary>
        [JsonProperty(PropertyName = "imageChange")]
        public Comgithubopenshiftapibuildv1ImageChangeTrigger ImageChange { get; set; }

        /// <summary>
        /// type is the type of build trigger
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
            if (this.Bitbucket != null)
            {
                this.Bitbucket.Validate();
            }
            if (this.Generic != null)
            {
                this.Generic.Validate();
            }
            if (this.Github != null)
            {
                this.Github.Validate();
            }
            if (this.Gitlab != null)
            {
                this.Gitlab.Validate();
            }
        }
    }
}
