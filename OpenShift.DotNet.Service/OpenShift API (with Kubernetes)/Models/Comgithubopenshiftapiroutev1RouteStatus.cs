// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace OpenShift.DotNet.Service.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// RouteStatus provides relevant info about the status of a route,
    /// including which routers acknowledge it.
    /// </summary>
    public partial class Comgithubopenshiftapiroutev1RouteStatus
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapiroutev1RouteStatus class.
        /// </summary>
        public Comgithubopenshiftapiroutev1RouteStatus() { }

        /// <summary>
        /// Initializes a new instance of the
        /// Comgithubopenshiftapiroutev1RouteStatus class.
        /// </summary>
        public Comgithubopenshiftapiroutev1RouteStatus(IList<Comgithubopenshiftapiroutev1RouteIngress> ingress)
        {
            Ingress = ingress;
        }

        /// <summary>
        /// ingress describes the places where the route may be exposed. The
        /// list of ingress points may contain duplicate Host or RouterName
        /// values. Routes are considered live once they are `Ready`
        /// </summary>
        [JsonProperty(PropertyName = "ingress")]
        public IList<Comgithubopenshiftapiroutev1RouteIngress> Ingress { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Ingress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Ingress");
            }
        }
    }
}
